clear; clc;

%% Configuration
freq_target = 5.8e9;                    % Target frequency [Hz]
c = 3e8;
lambda = c / freq_target;
d = lambda / 2;                         % Element spacing [m]

N = 4;                                  % Number of elements per row

% Positions: TX row at y=0, RX row at y=0.03 m (3 cm)
positions_tx = [0:d:(N-1)*d; zeros(1,N); zeros(1,N)];       % 4 elements along x, y=0, z=0
positions_rx = [0:d:(N-1)*d; 0.03*ones(1,N); zeros(1,N)];  % RX row shifted 3 cm in y

% Beamsteering phases for TX [degrees]
phases_deg_tx = [0 0 0 0];
phases_rad_tx = deg2rad(phases_deg_tx);

% Far-field measurement files for each TX antenna
files_tx = {'ant1.txt', 'ant2.txt', 'ant3.txt', 'ant4.txt'};

% For RX antennas, assume same files or measurement data (modify if different)
files_rx = files_tx;  % or load separately if available

% Initialize
theta_all = [];
phi_all = [];
E_tx_total = [];
E_rx_total = [];

for i = 1:N
    % Load TX file and filter frequency
    data_tx = readmatrix(files_tx{i}, 'NumHeaderLines', 1);
    data_5800_tx = data_tx(data_tx(:,3) == freq_target, :);
    
    az_tx = data_5800_tx(:,1);
    el_tx = data_5800_tx(:,2);
    phi = az_tx; theta = el_tx;
    
    if i == 1
        phi_unique = unique(phi);
        theta_unique = unique(theta);
        [Phi, Theta] = meshgrid(phi_unique, theta_unique);
        E_tx_total = zeros(size(Phi));
        E_rx_total = zeros(size(Phi));
    end
    
    % Complex field E_theta for TX
    EH_re_tx = data_5800_tx(:,4);
    EH_im_tx = data_5800_tx(:,5);
    Eth_tx = EH_re_tx + 1i*EH_im_tx;
    Eth_matrix_tx = reshape(Eth_tx, length(theta_unique), length(phi_unique));
    
    % Wave number
    k = 2*pi/lambda;
    r_tx = positions_tx(:,i);
    
    % Phase shift for TX array steering
    phase_shift_tx = exp(1i * (k * (r_tx(1)*sin(Theta).*cos(Phi) + ...
                                    r_tx(2)*sin(Theta).*sin(Phi) + ...
                                    r_tx(3)*cos(Theta)) + phases_rad_tx(i)));
                                
    % Coherent sum TX
    E_tx_total = E_tx_total + Eth_matrix_tx .* phase_shift_tx;
end

% --- Now for RX array ---

% Assume same frequency, azimuth, elevation sampling
for j = 1:N
    % Load RX file and filter frequency
    data_rx = readmatrix(files_rx{j}, 'NumHeaderLines', 1);
    data_5800_rx = data_rx(data_rx(:,3) == freq_target, :);
    
    % Complex field E_theta for RX
    EH_re_rx = data_5800_rx(:,4);
    EH_im_rx = data_5800_rx(:,5);
    Eth_rx = EH_re_rx + 1i*EH_im_rx;
    Eth_matrix_rx = reshape(Eth_rx, length(theta_unique), length(phi_unique));
    
    r_rx = positions_rx(:,j);
    
    % Phase shift for RX array reception (note the negative sign in phase for reception)
    phase_shift_rx = exp(-1i * k * (r_rx(1)*sin(Theta).*cos(Phi) + ...
                                    r_rx(2)*sin(Theta).*sin(Phi) + ...
                                    r_rx(3)*cos(Theta)));
                                
    % Coherent sum RX
    E_rx_total = E_rx_total + Eth_matrix_rx .* phase_shift_rx;
end

% --- Combined Bi-static Field Pattern ---
% Multiply transmitted field by received field (coherent product)
E_bistatic = E_tx_total .* conj(E_rx_total);  % Conjugate because RX is reception

% Magnitude and max location
E_mag_bistatic = abs(E_bistatic);
[max_val_bi, idx_max_bi] = max(E_mag_bistatic(:));
[idx_theta_max_bi, idx_phi_max_bi] = ind2sub(size(E_mag_bistatic), idx_max_bi);
theta_max_bi = theta_unique(idx_theta_max_bi);
phi_max_bi = phi_unique(idx_phi_max_bi);

fprintf('\n--- Bi-static RCS Scenario ---\n');
fprintf('Max combined field magnitude: %.4f (unitless)\n', max_val_bi);
fprintf('Max direction (theta, phi): %.1f°, %.1f°\n', rad2deg(theta_max_bi), rad2deg(phi_max_bi));

%% Optional: plot bi-static pattern in polar (theta cut at phi=phi_max_bi)
theta_cut_idx = idx_phi_max_bi;
figure;
polarplot(deg2rad(rad2deg(theta_unique)), E_mag_bistatic(:,theta_cut_idx));
title('Bi-static Pattern Magnitude (Theta cut)');
rlim([0 max(E_mag_bistatic(:))]);
grid on;
